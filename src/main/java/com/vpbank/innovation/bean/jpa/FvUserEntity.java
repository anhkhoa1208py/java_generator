/*
 * Created on 2022-04-14 ( Time 09:45:06 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.vpbank.innovation.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "FV_USER"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="FV_USER", schema="FIELDVISITOR_OWNER" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="FvUserEntity.countAll", query="SELECT COUNT(x) FROM FvUserEntity x" )
} )
public class FvUserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="ID", nullable=false)
    @SequenceGenerator(name="SEQ_GEN", sequenceName="FV_USER_SEQ", allocationSize=1)
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="SEQ_GEN")
    private BigDecimal id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="FULL_NAME")
    private String     fullName     ;

    @Column(name="MOBILE_NUMBER")
    private String     mobileNumber ;

    @Column(name="EMAIL")
    private String     email        ;

    @Column(name="USER_NAME")
    private String     userName     ;

    @Column(name="PASS_WORD")
    private String     passWord     ;

    @Column(name="STATUS")
    private String     status       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_ON")
    private Date       createdOn    ;

    @Column(name="CREATED_BY", length=250)
    private String     createdBy    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MODIFIED_ON")
    private Date       modifiedOn   ;

    @Column(name="MODIFIED_BY", length=250)
    private String     modifiedBy   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_LOGIN_DATE")
    private Date       lastLoginDate ;

    @Column(name="LAST_LOGIN_IP")
    private String     lastLoginIp  ;

    @Column(name="ROLE", length=255)
    private String     role         ;

    @Column(name="REGION_ID")
    private BigDecimal regionId     ;

    @Column(name="PROVINCE_ID")
    private BigDecimal provinceId   ;

    @Column(name="MBCA", length=32)
    private String     mbca         ;

    @Column(name="GPS", length=200)
    private String     gps          ;

    @Column(name="BRANCH_NAME", length=200)
    private String     branchName   ;

    @Column(name="AD_NEW_DEFAULT")
    private BigDecimal adNewDefault ;

    @Column(name="AD_UPLOAD_DEFAULT")
    private BigDecimal adUploadDefault ;

    @Column(name="DEVICE_ID", length=250)
    private String     deviceId     ;

    @Column(name="PLAYER_ID", length=250)
    private String     playerId     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="fvUser", targetEntity=FvAnnualLeaveEntity.class)
    private List<FvAnnualLeaveEntity> listOfFvAnnualLeave;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public FvUserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( BigDecimal id ) {
        this.id = id ;
    }
    public BigDecimal getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FULL_NAME ( NVARCHAR2 ) 
    public void setFullName( String fullName ) {
        this.fullName = fullName;
    }
    public String getFullName() {
        return this.fullName;
    }

    //--- DATABASE MAPPING : MOBILE_NUMBER ( NVARCHAR2 ) 
    public void setMobileNumber( String mobileNumber ) {
        this.mobileNumber = mobileNumber;
    }
    public String getMobileNumber() {
        return this.mobileNumber;
    }

    //--- DATABASE MAPPING : EMAIL ( NVARCHAR2 ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : USER_NAME ( NVARCHAR2 ) 
    public void setUserName( String userName ) {
        this.userName = userName;
    }
    public String getUserName() {
        return this.userName;
    }

    //--- DATABASE MAPPING : PASS_WORD ( NVARCHAR2 ) 
    public void setPassWord( String passWord ) {
        this.passWord = passWord;
    }
    public String getPassWord() {
        return this.passWord;
    }

    //--- DATABASE MAPPING : STATUS ( NVARCHAR2 ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : CREATED_ON ( TIMESTAMP(6) ) 
    public void setCreatedOn( Date createdOn ) {
        this.createdOn = createdOn;
    }
    public Date getCreatedOn() {
        return this.createdOn;
    }

    //--- DATABASE MAPPING : CREATED_BY ( VARCHAR2 ) 
    public void setCreatedBy( String createdBy ) {
        this.createdBy = createdBy;
    }
    public String getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : MODIFIED_ON ( TIMESTAMP(6) ) 
    public void setModifiedOn( Date modifiedOn ) {
        this.modifiedOn = modifiedOn;
    }
    public Date getModifiedOn() {
        return this.modifiedOn;
    }

    //--- DATABASE MAPPING : MODIFIED_BY ( VARCHAR2 ) 
    public void setModifiedBy( String modifiedBy ) {
        this.modifiedBy = modifiedBy;
    }
    public String getModifiedBy() {
        return this.modifiedBy;
    }

    //--- DATABASE MAPPING : LAST_LOGIN_DATE ( TIMESTAMP(6) ) 
    public void setLastLoginDate( Date lastLoginDate ) {
        this.lastLoginDate = lastLoginDate;
    }
    public Date getLastLoginDate() {
        return this.lastLoginDate;
    }

    //--- DATABASE MAPPING : LAST_LOGIN_IP ( NVARCHAR2 ) 
    public void setLastLoginIp( String lastLoginIp ) {
        this.lastLoginIp = lastLoginIp;
    }
    public String getLastLoginIp() {
        return this.lastLoginIp;
    }

    //--- DATABASE MAPPING : ROLE ( VARCHAR2 ) 
    public void setRole( String role ) {
        this.role = role;
    }
    public String getRole() {
        return this.role;
    }

    //--- DATABASE MAPPING : REGION_ID ( NUMBER ) 
    public void setRegionId( BigDecimal regionId ) {
        this.regionId = regionId;
    }
    public BigDecimal getRegionId() {
        return this.regionId;
    }

    //--- DATABASE MAPPING : PROVINCE_ID ( NUMBER ) 
    public void setProvinceId( BigDecimal provinceId ) {
        this.provinceId = provinceId;
    }
    public BigDecimal getProvinceId() {
        return this.provinceId;
    }

    //--- DATABASE MAPPING : MBCA ( VARCHAR2 ) 
    public void setMbca( String mbca ) {
        this.mbca = mbca;
    }
    public String getMbca() {
        return this.mbca;
    }

    //--- DATABASE MAPPING : GPS ( VARCHAR2 ) 
    public void setGps( String gps ) {
        this.gps = gps;
    }
    public String getGps() {
        return this.gps;
    }

    //--- DATABASE MAPPING : BRANCH_NAME ( VARCHAR2 ) 
    public void setBranchName( String branchName ) {
        this.branchName = branchName;
    }
    public String getBranchName() {
        return this.branchName;
    }

    //--- DATABASE MAPPING : AD_NEW_DEFAULT ( NUMBER ) 
    public void setAdNewDefault( BigDecimal adNewDefault ) {
        this.adNewDefault = adNewDefault;
    }
    public BigDecimal getAdNewDefault() {
        return this.adNewDefault;
    }

    //--- DATABASE MAPPING : AD_UPLOAD_DEFAULT ( NUMBER ) 
    public void setAdUploadDefault( BigDecimal adUploadDefault ) {
        this.adUploadDefault = adUploadDefault;
    }
    public BigDecimal getAdUploadDefault() {
        return this.adUploadDefault;
    }

    //--- DATABASE MAPPING : DEVICE_ID ( VARCHAR2 ) 
    public void setDeviceId( String deviceId ) {
        this.deviceId = deviceId;
    }
    public String getDeviceId() {
        return this.deviceId;
    }

    //--- DATABASE MAPPING : PLAYER_ID ( VARCHAR2 ) 
    public void setPlayerId( String playerId ) {
        this.playerId = playerId;
    }
    public String getPlayerId() {
        return this.playerId;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfFvAnnualLeave( List<FvAnnualLeaveEntity> listOfFvAnnualLeave ) {
        this.listOfFvAnnualLeave = listOfFvAnnualLeave;
    }
    public List<FvAnnualLeaveEntity> getListOfFvAnnualLeave() {
        return this.listOfFvAnnualLeave;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(fullName);
        sb.append("|");
        sb.append(mobileNumber);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(userName);
        sb.append("|");
        sb.append(passWord);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createdOn);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(modifiedOn);
        sb.append("|");
        sb.append(modifiedBy);
        sb.append("|");
        sb.append(lastLoginDate);
        sb.append("|");
        sb.append(lastLoginIp);
        sb.append("|");
        sb.append(role);
        sb.append("|");
        sb.append(regionId);
        sb.append("|");
        sb.append(provinceId);
        sb.append("|");
        sb.append(mbca);
        sb.append("|");
        sb.append(gps);
        sb.append("|");
        sb.append(branchName);
        sb.append("|");
        sb.append(adNewDefault);
        sb.append("|");
        sb.append(adUploadDefault);
        sb.append("|");
        sb.append(deviceId);
        sb.append("|");
        sb.append(playerId);
        return sb.toString(); 
    } 

}
