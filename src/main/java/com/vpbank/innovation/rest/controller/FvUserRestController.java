/*
 * Created on 2022-04-14 ( Time 09:45:05 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package com.vpbank.innovation.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.vpbank.innovation.bean.FvUser;
import com.vpbank.innovation.business.service.FvUserService;
import com.vpbank.innovation.web.listitem.FvUserListItem;

/**
 * Spring MVC controller for 'FvUser' management.
 */
@Controller
public class FvUserRestController {

	@Resource
	private FvUserService fvUserService;
	
	@RequestMapping( value="/items/fvUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<FvUserListItem> findAllAsListItems() {
		List<FvUser> list = fvUserService.findAll();
		List<FvUserListItem> items = new LinkedList<FvUserListItem>();
		for ( FvUser fvUser : list ) {
			items.add(new FvUserListItem( fvUser ) );
		}
		return items;
	}
	
	@RequestMapping( value="/fvUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<FvUser> findAll() {
		return fvUserService.findAll();
	}

	@RequestMapping( value="/fvUser/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public FvUser findOne(@PathVariable("id") BigDecimal id) {
		return fvUserService.findById(id);
	}
	
	@RequestMapping( value="/fvUser",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public FvUser create(@RequestBody FvUser fvUser) {
		return fvUserService.create(fvUser);
	}

	@RequestMapping( value="/fvUser/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public FvUser update(@PathVariable("id") BigDecimal id, @RequestBody FvUser fvUser) {
		return fvUserService.update(fvUser);
	}

	@RequestMapping( value="/fvUser/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") BigDecimal id) {
		fvUserService.delete(id);
	}
	
}
