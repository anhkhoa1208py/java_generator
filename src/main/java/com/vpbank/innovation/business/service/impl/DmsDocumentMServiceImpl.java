/*
 * Created on 2022-04-12 ( Time 14:44:13 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package com.vpbank.innovation.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.vpbank.innovation.bean.DmsDocumentM;
import com.vpbank.innovation.bean.jpa.DmsDocumentMEntity;
import java.math.BigDecimal;
import java.util.Date;
import com.vpbank.innovation.business.service.DmsDocumentMService;
import com.vpbank.innovation.business.service.mapping.DmsDocumentMServiceMapper;
import com.vpbank.innovation.data.repository.jpa.DmsDocumentMJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of DmsDocumentMService
 */
@Component
@Transactional
public class DmsDocumentMServiceImpl implements DmsDocumentMService {

	@Resource
	private DmsDocumentMJpaRepository dmsDocumentMJpaRepository;

	@Resource
	private DmsDocumentMServiceMapper dmsDocumentMServiceMapper;
	
	@Override
	public DmsDocumentM findById(BigDecimal id) {
		DmsDocumentMEntity dmsDocumentMEntity = dmsDocumentMJpaRepository.findOne(id);
		return dmsDocumentMServiceMapper.mapDmsDocumentMEntityToDmsDocumentM(dmsDocumentMEntity);
	}

	@Override
	public List<DmsDocumentM> findAll() {
		Iterable<DmsDocumentMEntity> entities = dmsDocumentMJpaRepository.findAll();
		List<DmsDocumentM> beans = new ArrayList<DmsDocumentM>();
		for(DmsDocumentMEntity dmsDocumentMEntity : entities) {
			beans.add(dmsDocumentMServiceMapper.mapDmsDocumentMEntityToDmsDocumentM(dmsDocumentMEntity));
		}
		return beans;
	}

	@Override
	public DmsDocumentM save(DmsDocumentM dmsDocumentM) {
		return update(dmsDocumentM) ;
	}

	@Override
	public DmsDocumentM create(DmsDocumentM dmsDocumentM) {
		DmsDocumentMEntity dmsDocumentMEntity = new DmsDocumentMEntity();
		dmsDocumentMServiceMapper.mapDmsDocumentMToDmsDocumentMEntity(dmsDocumentM, dmsDocumentMEntity);
		DmsDocumentMEntity dmsDocumentMEntitySaved = dmsDocumentMJpaRepository.save(dmsDocumentMEntity);
		return dmsDocumentMServiceMapper.mapDmsDocumentMEntityToDmsDocumentM(dmsDocumentMEntitySaved);
	}

	@Override
	public DmsDocumentM update(DmsDocumentM dmsDocumentM) {
		DmsDocumentMEntity dmsDocumentMEntity = dmsDocumentMJpaRepository.findOne(dmsDocumentM.getId());
		dmsDocumentMServiceMapper.mapDmsDocumentMToDmsDocumentMEntity(dmsDocumentM, dmsDocumentMEntity);
		DmsDocumentMEntity dmsDocumentMEntitySaved = dmsDocumentMJpaRepository.save(dmsDocumentMEntity);
		return dmsDocumentMServiceMapper.mapDmsDocumentMEntityToDmsDocumentM(dmsDocumentMEntitySaved);
	}

	@Override
	public void delete(BigDecimal id) {
		dmsDocumentMJpaRepository.delete(id);
	}

	public DmsDocumentMJpaRepository getDmsDocumentMJpaRepository() {
		return dmsDocumentMJpaRepository;
	}

	public void setDmsDocumentMJpaRepository(DmsDocumentMJpaRepository dmsDocumentMJpaRepository) {
		this.dmsDocumentMJpaRepository = dmsDocumentMJpaRepository;
	}

	public DmsDocumentMServiceMapper getDmsDocumentMServiceMapper() {
		return dmsDocumentMServiceMapper;
	}

	public void setDmsDocumentMServiceMapper(DmsDocumentMServiceMapper dmsDocumentMServiceMapper) {
		this.dmsDocumentMServiceMapper = dmsDocumentMServiceMapper;
	}

}
